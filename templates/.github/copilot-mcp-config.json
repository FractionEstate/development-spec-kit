{
  "$schema": "https://spec.modelcontextprotocol.io/schema/mcp-config.json",
  "mcpServers": {
    "spec-driven-development": {
      "command": "node",
      "args": ["./.github/mcp/sdd-context-server.js"],
      "env": {
        "SDD_PROJECT_ROOT": "${workspaceFolder}",
        "SDD_PHASE_DETECTION": "auto",
        "SDD_CONTEXT_DEPTH": "full"
      }
    }
  },
  "contextProviders": [
    {
      "name": "sdd-project-context",
      "type": "file-based",
      "patterns": [
        "memory/constitution.md",
        "specs/*/spec.md",
        "specs/*/plan.md", 
        "specs/*/tasks.md",
        "specs/*/data-model.md",
        "specs/*/contracts/*.md",
        ".github/copilot-instructions.md",
        ".github/copilot-context.md"
      ],
      "priority": "high"
    },
    {
      "name": "sdd-template-context",
      "type": "file-based",
      "patterns": [
        "templates/spec-template.md",
        "templates/plan-template.md",
        "templates/tasks-template.md",
        "templates/agent-file-template.md"
      ],
      "priority": "medium"
    },
    {
      "name": "sdd-development-context",
      "type": "workspace",
      "includeWorkspaceStructure": true,
      "includeGitHistory": true,
      "maxDepth": 3,
      "priority": "medium"
    }
  ],
  "semanticIndexing": {
    "enabled": true,
    "chunkSize": 1000,
    "overlapSize": 200,
    "includedExtensions": [".md", ".json", ".yml", ".yaml", ".txt"],
    "excludedPaths": ["node_modules", ".git", "dist", "build"]
  },
  "contextWindow": {
    "targetSize": 8000,
    "maxSize": 12000,
    "prioritization": "relevance-first",
    "fallbackStrategy": "truncate-oldest"
  },
  "customInstructions": {
    "globalContext": "This is a Spec-Driven Development (SDD) project where specifications are executable and drive implementation. Always consider the SDD methodology when providing assistance.",
    "phaseSpecific": {
      "specify": "Focus on creating clear, unambiguous specifications with concrete acceptance criteria.",
      "plan": "Emphasize technical architecture decisions and implementation strategies.",
      "implement": "Prioritize code quality, testing, and alignment with specifications.",
      "analyze": "Focus on consistency checking and validation across all artifacts."
    }
  }
}